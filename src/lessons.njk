---
layout: base
title: Lessons
---
<section class="container py-12">
  <h1 class="text-3xl font-bold mb-8">{{ site.lessons_heading or 'Group Lessons' }}</h1>
  <div class="grid md:grid-cols-3 gap-8">
    <div class="md:col-span-2">
      <ul class="space-y-6">
        {% for lesson in collections.lessons %}
        {% set slug = lesson.fileSlug %}
        <li class="card">
          <div class="p-5 space-y-3">
            <div class="flex items-start justify-between gap-4">
              <div>
                <h3 class="text-xl font-semibold">{{ lesson.data.title }}</h3>
                <p class="text-sm text-gray-600">{{ lesson.data.date | readableDate }} · {{ lesson.data.location }}</p>
              </div>
              <div class="text-right text-sm">
                <span class="font-medium" data-status-badge="{{ slug }}">Loading…</span><br>
                <span class="text-xs">Seats left: <span data-remaining-badge="{{ slug }}">—</span></span>
              </div>
            </div>
            {% if lesson.data.description %}
              <p>{{ lesson.data.description }}</p>
            {% endif %}
            <form data-lesson-form data-slug="{{ slug }}" data-capacity="{{ lesson.data.capacity }}" class="mt-2 grid sm:grid-cols-5 gap-3 items-end">
              <input type="hidden" name="slug" value="{{ slug }}">
              <div class="sm:col-span-2">
                <label class="block text-xs font-medium mb-1">Name
                  <input required name="name" class="mt-1 w-full border rounded-md px-2 py-1" />
                </label>
              </div>
              <div class="sm:col-span-2">
                <label class="block text-xs font-medium mb-1">Email
                  <input required type="email" name="email" class="mt-1 w-full border rounded-md px-2 py-1" />
                </label>
              </div>
              <div class="sm:col-span-1 flex flex-col">
                <button type="submit" class="btn h-full">Join</button>
                <span class="sr-only" data-status></span>
              </div>
              <div class="col-span-5 text-xs text-gray-600 flex gap-4">
                <span>Status: <span data-status>Loading…</span></span>
                <span>Remaining: <span data-remaining>—</span></span>
              </div>
            </form>
          </div>
        </li>
        {% endfor %}
      </ul>
    </div>
    <aside class="space-y-4">
      <div class="card p-5">
        <h2 class="font-semibold mb-2">{{ site.lessons_heading or 'How it works' }}</h2>
        <ol class="list-decimal list-inside text-sm space-y-1">
          {% for s in site.lessons_steps %}<li>{{ s.step }}</li>{% endfor %}
        </ol>
      </div>
      {% endif %}
      {% if site.lessons_help_heading or site.lessons_help_text %}
      <div class="card p-5 text-sm">
        <h2 class="font-semibold mb-2">{{ site.lessons_help_heading }}</h2>
        <p>{{ site.lessons_help_text }}</p>
      </div>
      {% endif %}
    </aside>
  </div>
</section>
<script type="module" src="/assets/js/lessons.js"></script>
---
layout: base
title: Lessons
---
<section class="container py-12">
  <h1 class="text-3xl font-bold mb-8">Group Lessons</h1>
  <div class="grid md:grid-cols-3 gap-8">
    <div class="md:col-span-2">
      <ul class="space-y-6">
        {% for lesson in collections.lessons %}
        {% set slug = lesson.fileSlug %}
        <li class="card">
          <div class="p-5 space-y-3">
            <div class="flex items-start justify-between gap-4">
              <div>
                <h3 class="text-xl font-semibold">{{ lesson.data.title }}</h3>
                <p class="text-sm text-gray-600">{{ lesson.data.date | readableDate }} · {{ lesson.data.location }}</p>
              </div>
              <div class="text-right text-sm">
                <span class="font-medium" data-status-badge="{{ slug }}">Loading…</span><br>
                <span class="text-xs">Seats left: <span data-remaining-badge="{{ slug }}">—</span></span>
              </div>
            </div>
            {% if lesson.data.description %}
              <p>{{ lesson.data.description }}</p>
            {% endif %}
            <form data-lesson-form data-slug="{{ slug }}" data-capacity="{{ lesson.data.capacity }}" class="mt-2 grid sm:grid-cols-5 gap-3 items-end">
              <input type="hidden" name="slug" value="{{ slug }}">
              <div class="sm:col-span-2">
                <label class="block text-xs font-medium mb-1">Name
                  <input required name="name" class="mt-1 w-full border rounded-md px-2 py-1" />
                </label>
              </div>
              <div class="sm:col-span-2">
                <label class="block text-xs font-medium mb-1">Email
                  <input required type="email" name="email" class="mt-1 w-full border rounded-md px-2 py-1" />
                </label>
              </div>
              <div class="sm:col-span-1 flex flex-col">
                <button type="submit" class="btn h-full">Join</button>
                <span class="sr-only" data-status></span>
              </div>
              <div class="col-span-5 text-xs text-gray-600 flex gap-4">
                <span>Status: <span data-status>Loading…</span></span>
                <span>Remaining: <span data-remaining>—</span></span>
              </div>
            </form>
          </div>
        </li>
        {% endfor %}
      </ul>
    </div>
    <aside class="space-y-4">
      <div class="card p-5">
        <h2 class="font-semibold mb-2">How it works</h2>
        <ol class="list-decimal list-inside text-sm space-y-1">
          <li>Find a lesson and register.</li>
          <li>If seats remain, you get a pending spot.</li>
          <li>Admin confirms by email (manual for now).</li>
        </ol>
      </div>
      <div class="card p-5 text-sm">
        <h2 class="font-semibold mb-2">Need help?</h2>
        <p>Contact us via Instagram or email.</p>
      </div>
    </aside>
  </div>
</section>
<script type="module">
import { initLessonForms } from '/assets/js/lessons.js';
window.addEventListener('DOMContentLoaded', () => {
  initLessonForms();
  // Map badges
  document.querySelectorAll('[data-lesson-form]').forEach(form => {
    const slug = form.dataset.slug;
    const cap = parseInt(form.dataset.capacity || '0', 10);
    // Mirror internal status counters to list badges
    const statusSpan = form.querySelector('[data-status]');
    const remainingSpan = form.querySelector('[data-remaining]');
    const externalStatus = document.querySelector(`[data-status-badge="${slug}"]`);
    const externalRemaining = document.querySelector(`[data-remaining-badge="${slug}"]`);
    const observer = new MutationObserver(() => {
      if(externalStatus) externalStatus.textContent = statusSpan.textContent;
      if(externalRemaining) externalRemaining.textContent = remainingSpan.textContent;
    });
    observer.observe(statusSpan, { characterData: true, subtree: true, childList: true });
    observer.observe(remainingSpan, { characterData: true, subtree: true, childList: true });
  });
});
</script>